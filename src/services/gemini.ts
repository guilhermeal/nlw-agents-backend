import { GoogleGenAI } from "@google/genai";
import { env } from "../env.ts";
import z from "zod";

const promptProduct = `INSTRU√á√ïES: 

Voc√™ √© um classificador de produtos altamente especializado e precisa analisar cada mensagem ou link recebido com o objetivo de identificar a categoria correta, extrair o link, identificar o marketplace de origem, identificar o pre√ßo atual e pre√ßo anterior, descrever o produto, associar um emoji condizente e criar uma pequena copy de venda envolvente para encaminhar ao grupo apropriado.

Sua tarefa √© ler a mensagem, extrair palavras-chave, identificar o tipo de produto, extrair o link, identificar o marketplace e associar com 99% de acur√°cia a uma das categorias listadas abaixo.

1. üëö Moda & Beleza  
   ‚Üí Roupas, cal√ßados, acess√≥rios, bolsas, maquiagem, cosm√©ticos, cuidados com a pele e cabelo, perfumes e acess√≥rios pessoais.

2. üíª Tecnologia & Inform√°tica  
   ‚Üí Computadores, notebooks, tablets, monitores, componentes de PC, perif√©ricos, acess√≥rios de inform√°tica, produtos de automa√ß√£o residencial e jogos digitais.

3. üì± Celulares & Telefonia  
   ‚Üí Smartphones, celulares, chips, planos, capas, pel√≠culas, fones de ouvido, caixas de som Bluetooth, roteadores Wi-Fi e acess√≥rios relacionados.

4. üõãÔ∏è Casa & Decora√ß√£o  
   ‚Üí M√≥veis, decora√ß√£o de interiores e exteriores, ilumina√ß√£o, organizadores, utens√≠lios de cozinha, artigos de banheiro, cama, mesa e banho, itens para jardim.

5. ‚ö° Eletrodom√©sticos  
   ‚Üí Geladeiras, fog√µes, lavadoras, micro-ondas, fornos el√©tricos, ferros de passar, cafeteiras, liquidificadores, aspiradores de p√≥ e produtos de limpeza dom√©stica.

6. üèÉ Esporte & Lazer  
   ‚Üí Produtos para academia, corrida, ciclismo, camping, trilhas, praia, piscina, bicicletas, patins, skate, brinquedos ao ar livre e acess√≥rios para pets.

7. üë∂ Infantil & Gestantes  
   ‚Üí Enxoval de beb√™, brinquedos infantis, roupas de beb√™, acess√≥rios para amamenta√ß√£o, carrinhos, cadeirinhas, fraldas, livros infantis e produtos para gestantes.

8. üß¥ Sa√∫de & Bem-estar  
   ‚Üí Produtos de cuidados pessoais, bem-estar, suplementos, vitaminas, produtos de emagrecimento, cuidados bucais, produtos de automaquiagem e itens de autocuidado.

9. ‚ùì Outros itens  
   ‚Üí Se n√£o for poss√≠vel associar a nenhuma das categorias acima, retorne esta op√ß√£o. Caso tenham pelo menos 1% de d√∫vida, deve-se enviar para esta op√ß√£o.


# üìå Instru√ß√µes Espec√≠ficas:

- Leia atentamente a mensagem ou link recebido.
- Extraia palavras-chave e termos t√©cnicos que indiquem o tipo de produto.
- Identifique a categoria mais apropriada com base na lista abaixo.
- Associe com base no significado e contexto, n√£o apenas palavras isoladas.
- Use racioc√≠nio l√≥gico e conhecimento de mercado para identificar categorias impl√≠citas.
- Descreva o produto com uma frase curta e clara (product).
- Associe um emoji que represente bem o produto (emoji).
- Extraia o link (URL) presente na mensagem.
- Se houver ambiguidade ou falta de informa√ß√µes, retorne "Outros itens".
- Identifique o marketplace com base no dom√≠nio do link.
- Identifique o valor atual do produto (value) .
- Se houver indica√ß√£o de pre√ßo anterior (ex: "De R$ 200,00 por R$ 120,00"), inclua o campo valueBefore.
- Os campos de valores deve estar no formato #.##, completando com zeros a direita quando necess√°rio;
- Nunca force uma associa√ß√£o se a mensagem for imprecisa ou gen√©rica.
- Se houver m√∫ltiplas categorias na mesma mensagem, priorize a categoria principal ou retorne "Outros itens" caso n√£o seja poss√≠vel decidir com seguran√ßa.
- Se houver ambiguidade ou falta de informa√ß√µes, retorne "outros-itens" como categoria.
- Crie uma pequena frase de venda (storytelling) com at√© 100 caracteres, usando gatilhos mentais e linguagem informal, conectada com o dia a dia do brasileiro comum. Pode incluir uma piada ou refer√™ncia cultural leve. Use emojis que fa√ßam sentido √† mensagem, deixando o texto mais elegante. Se usar g√≠rias ou ditos populares, estes s√≥ podem ser de origem da cultura brasileira e escritos exclusivamente em portugu√™s. Evite palavras em outros idiomas que n√£o seja portugu√™s. Seja engra√ßadao.
- Identifique cupons de descontos nas mensagnes, se encontrar retorne em "coupons".


# üîç Contexto para Identifica√ß√£o de Marketplace
Use os seguintes padr√µes para identificar o marketplace com base no link:

Marketplaces dispon√≠veis e habilitados para gera√ß√£o de mensagem:

- Amazon : amzn.to ou amazon.com.br - (Retornar instancia: "amazon");
- Mercado Livre : mercadolivre.com.br ou ml.com.br - (Retornar instancia: "mercado-livre");
- Shopee : shopee.com.br ou s.shopee.com.br - (Retornar instancia: "shopee");
- AliExpress : aliexpress.com ou s.click.aliexpress.com - (Retornar instancia: "aliexpress");


# ‚ùå Caso n√£o seja poss√≠vel identificar:

Caso 1: Se for idenfitifaco que o texto ou link refere-se a um produto verdadeiramente existente, mas que n√£o se encaixa em nenhuma das categorias existentes, voc√™ deve atribuir √† categoria de inst√¢ncia "outros-itens"..

# Exemplo 1:
"Link imperd√≠vel para compra de um raspador de pelos de ratos essencial para sua beleza..."

Analise do Exemplo 1:
- Claramenten √© a venda de algum produto, mas definitivamente, n√£o possui refer√äncia a nenhuma das categorias predefinidas. Nesse caso, o produto vai para o grupo de "outros-itens".

# Exemplo 1.2:
"Percarbonato De S√≥dio 3kg 2kg e 1kg Los Chef Alvejante Tira Machas Roupa Branca e Colorida"

Analise do Exemplo 1.2:
- Nesse caso, n√£o sei porque exemplos em testes, retornou como "eletrodomesticos", mas acho que n√£o seria. Se encaixaria talvez, em "casa-decoracao", mas enfim, tem-se aqui uma d√∫vida. Ent√£o nesse caso, o produto deve impreterivelmente ir para o grupo de "outros-itens".

Agora...

Caso 2: Se a mensagem n√£o tem refer√äncia ou n√£o faz alus√£o a nenhum produto claramente, esta mensagem deve ser definitivamente descartada. Mas aten√ß√£o, aqui, s√≥ deve descartar a mensagem, se e somente se, for constatado com 100% de efic√°cia, que este texto n√£o refere-se a uma sugest√£o de algum produto que possa ser comprado.

# Exemplo 2: Mensagem recebida:  
"Link imperd√≠vel! Aproveite essa promo√ß√£o incr√≠vel!"

Resposta esperada:  
Descartar imediatamente a mensagem, e informar: "Anuncio invalido".


Enfim, abaixo, segue as categegorias agrupadas em um JSON para aperfei√ßoamento das respostas...


# ‚ùå Caso n√£o seja poss√≠vel identificar qual o MarketPlace:

- S√≥ √© permitido considerar mensagens que contenham links destes marketplaces listados acima;
- IGNORAR COMPLETAMENTE QUALQUER MENSAGEM DE MARKETPLACES DIFERENTES DOS LISTADOS!!!
- Se a mensagem recebida n√£o for de nenhum destes marketplaces: Amazon, Mercado Livre, Shopee, AliExpress : dever√° retornar uma mensagem para o usu√°rio informando que o marketplace √© inv√°lido. E que s√≥ √© permitido os marketplaces listados acima;


# üìã Categorias Dispon√≠veis:

[
  {
    "title": "üëö Moda & Beleza",
    "instance": "moda-beleza",
    "chatGroupId": "JAvD5UMGtYGHCAxUzEXz2m@g.us"
  },
  {
    "title": "üíª Tecnologia & Inform√°tica",
    "instance": "tecnologia-informatica",
    "chatGroupId": "He2TE0Vyl4h7gih07vKqYt@g.us"
  },
  {
    "title": "üì± Celulares & Telefonia",
    "instance": "celulares-telefonia",
    "chatGroupId": "GVk07NEoqT3AR7bQHDgxvy@g.us"
  },
  {
    "title": "üõã Casa & Decora√ß√£o",
    "instance": "casa-decoracao",
    "chatGroupId": "CI6TKtRY1GNJiogzVxywwA@g.us"
  },
  {
    "title": "‚ö° Eletrodom√©sticos",
    "instance": "eletrodomesticos",
    "chatGroupId": "F2Bc3KSvAPBIgpBrnaOkqw@g.us"
  },
  {
    "title": "üèÉ Esporte & Lazer",
    "instance": "esporte-lazer",
    "chatGroupId": "J9l0ExczCqFDdazKbcVwoq@g.us"
  },
  {
    "title": "üë∂ Infantil & Gestantes",
    "instance": "infantil-gestantes",
    "chatGroupId": "DL2Dh1mrJLE13my5RcZt2l@g.us"
  },
  {
    "title": "üß¥ Sa√∫de & Bem-estar",
    "instance": "saude-bem-estar",
    "chatGroupId": "BBCB2fRFZLKChG9jCa1pSa@g.us"
  },
  {
    "title": "‚ùì Outros Itens",
    "instance": "outros-itens",
    "chatGroupId": "E0f5lr2fnNGKDnGechn5fc@g.us"
  }
]


# ‚úÖ Exemplo de Resposta 1:
Mensagem recebida:
- "Oferta rel√¢mpago! Fone de ouvido Bluetooth com cancelamento de ru√≠do por R$ 89,90. Frete gr√°tis! https://amzn.to/4lz1crS"

- Resposta esperada - um objeto convertido em json:
{
  "instance": "celulares-telefonia",
  "chatGroupId": "GVk07NEoqT3AR7bQHDgxvy@g.us",
  "url": "https://amzn.to/4lz1crS ",
  "marketplace": "amazon",
  "value": 89.90,
  "product": "Fone de ouvido Bluetooth com cancelamento de ru√≠do",
  "emoji": "üéß",
  "storytelling": "Foge do barulho do vizinho e escuta seu som sem pagar caro!",
  "coupons": null
}

# üß™ Estrutura de Sa√≠da (Obrigat√≥ria):

A sa√≠da deve seguir sempre o formato:

> ‚ö†Ô∏è O retorno deve conter com todos os atributos pedidos. Isso garante a integra√ß√£o direta com seu sistema de rotas ou envio autom√°tico.

> ‚ö†Ô∏è Se o marketplace n√£o for identificado, ou , for de alguma marketplace diferente dos marketplaces dispon√≠veis neste prompt, a mensagem dever√° autmaticamente descartada, informando ao usu√°rio que o marketplace identificado √© inv√°lido ou n√£o existe e desconsiderar o padr√£o de retorno atribuido abaixo.

No caso de marketplace inv√°lido, o retorno dever√° ser:

"Marketplace inv√°lido"

Mas.... Se o marketplace for v√°lido e passar no teste acima o resutlado deve seguir o padr√£o abaixo...


## üöÄ Como usar no seu sistema:

Com base na resposta da IA ('instance'), seu sistema consulta a tabela de categorias e obt√©m o 'chatGroupId' correspondente.

A sa√≠da deve seguir sempre exclusivamente como o formato abaixo:
{
  "instance": "[instance]",
  "chatGroupId": "[chatGroupId]",
  "url": "[url_encontrada]",
  "marketplace": "[marketplace]",
  "value": [valor_atual ou null],
  "valueBefore": [valor_anterior ou null],
  "product": "[product-description]",
  "emoji": "[emoji]",
  "storytelling": "[storytelling]",
  "coupons": "[coupons]"
}
`;

const ProductAnalysisSchema = z.object({
  instance: z.string(),
  chatGroupId: z.string(),
  url: z.string().url(),
  marketplace: z.enum(["amazon", "mercado-livre", "shopee", "aliexpress"]),
  value: z.number().nullable(),
  valueBefore: z.number().nullable().optional(),
  product: z.string(),
  emoji: z.string(),
  storytelling: z.string(),
  coupons: z.string().nullable(),
});

const gemini = new GoogleGenAI({
  apiKey: env.GEMINI_API_KEY,
});

const model = "gemini-2.5-flash";

export const transcribeAUdio = async (
  audioAsBase64: string,
  mimeType: string
) => {
  const response = await gemini.models.generateContent({
    model,
    contents: [
      {
        text: "Transcreva o √°udio para portugu√™s do Brasil. Seja preciso e natural na transcri√ß√£o. Mantenha a pontua√ß√£o adequada para o padr√£o brasileiro e divida o texto em par√°grafos quando for apropriado. N√£o transcreva e nem considere mencionar sons externos, como ru√≠dos, barulhos, m√∫sicas de fundo. Reconhe√ßa na fidelidade da voz da pessoa e considere a transcri√ß√£o do que o narrador est√° falando. Evite retornar na transcri√ß√£o onomatop√©ias e frases como: 'N√£o h√° fala detectada no √°udio.' ",
      },
      {
        inlineData: {
          mimeType,
          data: audioAsBase64,
        },
      },
    ],
  });

  if (!response.text) {
    throw new Error("N√£o foi poss√≠vel converter o √°udio.");
  }

  return response.text;
};

export const generateEmbeddings = async (text: string) => {
  const response = await gemini.models.embedContent({
    model: "text-embedding-004",
    contents: [{ text }],
    config: {
      taskType: "RETRIEVAL_DOCUMENT",
    },
  });

  if (!response.embeddings?.[0].values) {
    throw new Error("N√£o foi poss√≠vel gerar os embeddings.");
  }

  return response.embeddings[0].values;
};

export const generateAnswer = async (
  question: string,
  transcriptions: string[]
) => {
  const context = transcriptions.join("\n\n");

  const prompt = `
    Com base no texto fornecido abaixo como contexto, responda a pergunta de forma clara e precisa em portugu√™s do Brasil, respeitando todas as regras gramaticais e de concord√¢ncia verbal. 

    CONTEXTO:
    ${context}

    PERGUNTA:
    ${question}

    INSTRU√á√ïES:
    - Use apenas informa√ß√µes contidas no contexto enviado;
    - Se a resposta n√£o for encontrada no contexto, apenas responda que n√£o possui informa√ß√µes suficientes para responder a esta pergunta;
    - Seja objetivo e educado;
    - Mantenha um tom educativo e profissional;
    - Cite trechos relevantes do contexto se apropriado;
    - Se for citar o contexto, utilize o termo "conte√∫do da aula";
  `.trim();

  const response = await gemini.models.generateContent({
    model,
    contents: [
      {
        text: prompt,
      },
    ],
  });

  if (!response.text) {
    throw new Error("Falha ao gerar responsta pelo Gemini");
  }

  return response.text;
};

export const generateSummary = async (transcriptions: string[]) => {
  const context = transcriptions.join("\n\n");

  const prompt = `
  Com base no texto fornecido abaixo como contexto, gere um resumo l√≥gico e inteligente em portugu√™s do Brasil, mantendo a conex√£o dos argumentos, sinergia das palavras e preservando o contexto original das informa√ß√µes apresentadas.

    CONTEXTO:
    ${context}

    INSTRU√á√ïES:
    - Crie um resumo estruturado e coerente que mantenha a intelig√™ncia e fluidez do conte√∫do original;
    - Preserve as conex√µes l√≥gicas entre os conceitos e argumentos apresentados;
    - Mantenha a sinergia entre as ideias, respeitando o encadeamento natural dos t√≥picos;
    - Use apenas informa√ß√µes contidas no contexto enviado;
    - Se n√£o houver informa√ß√µes suficientes no contexto, responda que n√£o possui conte√∫do adequado para gerar este resumo;
    - Organize as informa√ß√µes de forma did√°tica e progressiva;
    - Mantenha um tom educativo e profissional;
    - Preserve a ess√™ncia e os pontos-chave do "conte√∫do da aula";
    - Conecte os temas de forma natural, demonstrando a rela√ß√£o entre os conceitos;
    - Respeite todas as regras gramaticais e de concord√¢ncia verbal do portugu√™s brasileiro;
  `.trim();

  const response = await gemini.models.generateContent({
    model,
    contents: [
      {
        text: prompt,
      },
    ],
  });

  if (!response.text) {
    throw new Error("Falha ao gerar resumo pelo Gemini");
  }

  return response.text;
};

export const generateProductLink = async (message: string) => {
  // const context = message.join("\n\n");

  const prompt = `${promptProduct}
    
    MENSAGEM:
    ${message}

    IMPORTANTE: Retorne APENAS o objeto JSON v√°lido, sem texto adicional, sem markdown, sem explica√ß√µes.
  `.trim();

  try {
    const response = await gemini.models.generateContent({
      model,
      contents: [
        {
          text: prompt,
        },
      ],
    });

    if (!response.text) {
      throw new Error("Falha ao gerar resposta pelo Gemini");
    }

    // ‚úÖ Limpar poss√≠vel markdown ou texto extra
    let cleanResponse = response.text.trim();

    // Remover markdown se existir
    if (cleanResponse.startsWith("```json")) {
      cleanResponse = cleanResponse
        .replace(/```json\s*/, "")
        .replace(/```\s*$/, "");
    }

    // Remover outros poss√≠veis prefixos/sufixos
    cleanResponse = cleanResponse.replace(/^[^{]*/, "").replace(/[^}]*$/, "");

    // ‚úÖ Fazer parse do JSON
    const jsonResult = JSON.parse(cleanResponse);

    // ‚úÖ Validar se √© "Marketplace inv√°lido" ou "Anuncio invalido"
    if (
      typeof jsonResult === "string" &&
      (jsonResult.includes("Marketplace inv√°lido") ||
        jsonResult.includes("Anuncio invalido"))
    ) {
      return { error: jsonResult };
    }

    // ‚úÖ Validar com Zod
    const validatedResult = ProductAnalysisSchema.parse(jsonResult);

    return validatedResult;
  } catch (error) {
    console.error("Erro ao processar resposta da IA:", error);

    // Se for erro de JSON parse
    if (error instanceof SyntaxError) {
      console.error(error);
      return { error: "Resposta da IA n√£o √© um JSON v√°lido" };
    }

    // Se for erro de valida√ß√£o Zod
    if (error instanceof z.ZodError) {
      console.error("Erro de valida√ß√£o:", error.errors);
      return { error: "Formato de resposta inv√°lido da IA" };
    }

    return { error: "Erro interno ao processar an√°lise do produto" };
  }
};
